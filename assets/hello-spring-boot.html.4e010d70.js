import{_ as o,r as e,o as c,c as l,a as n,b as t,e as p,d as s}from"./app.882488a7.js";var i="/jldev/spring/project-structure.png",r="/jldev/spring/swagger-ui.png",u="/jldev/spring/get-endpoint.png",k="/jldev/spring/post-endpoint.png";const d={},g=p('<h2 id="getting-start-with-spring-boot" tabindex="-1"><a class="header-anchor" href="#getting-start-with-spring-boot" aria-hidden="true">#</a> Getting Start with Spring Boot</h2><h3 id="overview" tabindex="-1"><a class="header-anchor" href="#overview" aria-hidden="true">#</a> Overview</h3><p>Well, nowaday everything is connect through APIs. So, let&#39;s see how Spring Boot makes building APIs easy...! Here&#39;s what we&#39;re going to do:</p><ul><li>Build a simple Spring Boot Rest API with two endpoints: <ul><li>One endpoint that says &quot;Hello Spring Boot&quot;</li><li>One endpoint that greets you with your name</li></ul></li></ul><h3 id="project-structure" tabindex="-1"><a class="header-anchor" href="#project-structure" aria-hidden="true">#</a> Project Structure</h3><p><img src="'+i+`" alt="Project Structure"></p><ul><li><p><strong>src</strong>: Source code of the project</p></li><li><p><strong>pom.xml</strong>: Information about the project and configuration details used by Maven to build the project.</p></li><li><p><strong>.gitignore</strong>: Specify what file or folder to be ignore by git.</p></li><li><p><strong>target</strong>: Target of the build codes. (ignore by git)</p></li><li><p><strong>HELP.md</strong>: Helpful infos for you to start with Spring Boot project.</p></li><li><p><strong>mvnw &amp; mvnw.cmd</strong>: The <code>mvnw</code> file is for Linux (bash) and the <code>mvnw.cmd</code> is for the Windows environment. This allows you to run the Maven project without having Maven installed and present on the path. It downloads the correct Maven version if it&#39;s not found.</p></li></ul><div class="custom-container tip"><p class="custom-container-title">Maven Wrapper</p><p>To create or update all necessary Maven Wrapper files execute the following command:</p><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code>mvn -N io.takari:maven:wrapper
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>To use a different version of maven you can specify the version as follows:</p><div class="language-cmd ext-cmd line-numbers-mode"><pre class="language-cmd"><code>mvn -N io.takari:maven:wrapper -Dmaven=3.3.3
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Both commands require maven on PATH (add the path to maven bin to Path on System Variables) if you already have mvnw in your project you can use <code>./mvnw</code> instead of <code>mvn</code> in the commands.</p></div><h3 id="setup-dependencies" tabindex="-1"><a class="header-anchor" href="#setup-dependencies" aria-hidden="true">#</a> Setup Dependencies</h3>`,9),h=s("We can use "),m={href:"https://start.spring.io/",target:"_blank",rel:"noopener noreferrer"},v=s("Spring Initializr"),_=s(" to generate our base project, OR use your IDE to initialize the base project."),f=p(`<p>Here I&#39;m using the following setup:</p><ul><li><strong>Maven</strong> Project</li><li><strong>Java 11</strong></li><li>Spring Boot <strong>2.6.8</strong></li><li>Packaging: <strong>Jar</strong></li><li>Dependencies: <ul><li><strong>Spring Web</strong></li><li><strong>Spring Boot DevTools</strong> (for LiveReload if you use VScode, it won&#39;t work on IntelliJ...!)</li></ul></li></ul><p>After initialized it, you&#39;ll see the following dependencies in your <code>pom.xml</code> :</p><div class="language-xml ext-xml"><pre class="language-xml"><code>...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-devtools<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>runtime<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">&gt;</span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
		<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
...
</code></pre></div>`,4),b=s("Add another dependency from "),w={href:"https://mvnrepository.com/",target:"_blank",rel:"noopener noreferrer"},y=s("Maven Repository"),I=s(" call "),S=n("strong",null,'"springdoc-openapi-ui"',-1),q=s(", so that we can easily test our APIs right in the browser. It's a library for automate the generation of API documentation using spring boot projects."),x=p(`<div class="language-xml ext-xml"><pre class="language-xml"><code>...
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springdoc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>springdoc-openapi-ui<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
	<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.6.9<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
...
</code></pre></div><h3 id="setup-springdoc-openapi" tabindex="-1"><a class="header-anchor" href="#setup-springdoc-openapi" aria-hidden="true">#</a> Setup springdoc-openapi</h3><p>After adding the dependency we can run the application and visit the following path to see the Swagger doc by default:</p>`,3),j={class:"custom-container tip"},P=n("p",{class:"custom-container-title"},"API-Docs(JSON) Link",-1),A={href:"http://localhost:8080/v3/api-docs/",target:"_blank",rel:"noopener noreferrer"},B=s("http://localhost:8080/v3/api-docs/"),T={class:"custom-container tip"},O=n("p",{class:"custom-container-title"},"Swagger-UI-Docs Link",-1),H={href:"http://localhost:8080/swagger-ui.html",target:"_blank",rel:"noopener noreferrer"},M=s("http://localhost:8080/swagger-ui.html"),R=p(`<p>To customize the path, we can set it in <code>application.properties</code>:</p><div class="language-properties ext-properties"><pre class="language-properties"><code><span class="token comment"># For the OpenAPI definitions</span>
<span class="token key attr-name">springdoc.api-docs.path</span><span class="token punctuation">=</span><span class="token value attr-value">/api-docs</span>
<span class="token comment"># For Swagger API documentation</span>
<span class="token key attr-name">springdoc.swagger-ui.path</span><span class="token punctuation">=</span><span class="token value attr-value">/swagger-ui-custom.html</span>
<span class="token comment"># To sort the API paths in order of their HTTP methods</span>
<span class="token key attr-name">springdoc.swagger-ui.operationsSorter</span><span class="token punctuation">=</span><span class="token value attr-value">method</span>
</code></pre></div><p>Next add some general description to the API by adding an OpenAPI bean to our <code>HelloSpringBootApplication.java</code>:</p><div class="language-java ext-java"><pre class="language-java"><code><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token annotation punctuation">@Bean</span>
<span class="token keyword">public</span> <span class="token class-name">OpenAPI</span> <span class="token function">customOpenAPI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">OpenAPI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Info</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">title</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Spring Boot API&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">version</span><span class="token punctuation">(</span><span class="token string">&quot;v1&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">contact</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Contact</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;Jacob Lin&quot;</span><span class="token punctuation">)</span>
					<span class="token punctuation">.</span><span class="token function">email</span><span class="token punctuation">(</span><span class="token string">&quot;jacoblindev@gmail.com&quot;</span><span class="token punctuation">)</span>
					<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">&quot;https://jacoblindev.github.io/jldev/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">description</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Spring Boot API created with springdocs - &quot;</span> <span class="token operator">+</span>
					<span class="token string">&quot;a library for OpenAPI 3 with spring boot.&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">termsOfService</span><span class="token punctuation">(</span><span class="token string">&quot;http://swagger.io/terms/&quot;</span><span class="token punctuation">)</span>
			<span class="token punctuation">.</span><span class="token function">license</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">License</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">name</span><span class="token punctuation">(</span><span class="token string">&quot;Apache 2.0&quot;</span><span class="token punctuation">)</span>
					<span class="token punctuation">.</span><span class="token function">url</span><span class="token punctuation">(</span><span class="token string">&quot;http://springdoc.org&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
</code></pre></div><h3 id="create-restcontroller" tabindex="-1"><a class="header-anchor" href="#create-restcontroller" aria-hidden="true">#</a> Create @RestController</h3><p>To create the two endpoints, all we need is a java class that annotate with <code>@RestController</code>. Then annotate the path we want with <code>@RequestMapping</code>. At the class level it will apply to all methods in the class; at method level it will append after the class level one. We can also annotate with <code>@GetMapping</code> or <code>@PostMapping</code> ... to specify Http methods.</p><div class="language-java ext-java line-numbers-mode"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>jldev<span class="token punctuation">.</span>hellospringboot</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span></span><span class="token class-name">ResponseEntity</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token operator">*</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/api&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>

    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/hello&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">sayHello</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;Hello Spring Boot&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/greeting&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">ResponseEntity</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">greeting</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token class-name">ResponseEntity</span><span class="token punctuation">.</span><span class="token function">ok</span><span class="token punctuation">(</span><span class="token string">&quot;Hello, &quot;</span> <span class="token operator">+</span> name <span class="token operator">+</span> <span class="token string">&quot;!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="run-application" tabindex="-1"><a class="header-anchor" href="#run-application" aria-hidden="true">#</a> Run Application</h3><p>Finally, we run the application. If it&#39;s successful, you&#39;ll see the following logs:</p><div class="language-log ext-log"><pre class="language-log"><code>  <span class="token punctuation">.</span>   ____          _            __ _ _
 <span class="token operator">/</span>\\\\ <span class="token operator">/</span> ___&#39;_ __ _ _<span class="token operator">(</span>_<span class="token operator">)</span>_ __  __ _ \\ \\ \\ \\
<span class="token operator">(</span> <span class="token operator">(</span> <span class="token operator">)</span>\\___ <span class="token operator">|</span> <span class="token string">&#39;_ | &#39;</span>_<span class="token operator">|</span> <span class="token operator">|</span> &#39;_ \\<span class="token operator">/</span> _\` <span class="token operator">|</span> \\ \\ \\ \\
 \\\\<span class="token operator">/</span>  ___<span class="token operator">)</span><span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">)</span><span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span> <span class="token operator">|</span><span class="token operator">|</span> <span class="token operator">(</span>_<span class="token operator">|</span> <span class="token operator">|</span>  <span class="token operator">)</span> <span class="token operator">)</span> <span class="token operator">)</span> <span class="token operator">)</span>
  &#39;  <span class="token operator">|</span>____<span class="token operator">|</span> <span class="token punctuation">.</span>__<span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>_<span class="token operator">|</span>_<span class="token operator">|</span> <span class="token operator">|</span>_\\__<span class="token punctuation">,</span> <span class="token operator">|</span> <span class="token operator">/</span> <span class="token operator">/</span> <span class="token operator">/</span> <span class="token operator">/</span>
 <span class="token separator comment">=========</span><span class="token operator">|</span>_<span class="token operator">|</span><span class="token separator comment">==============</span><span class="token operator">|</span>___<span class="token operator">/</span><span class="token operator">=</span><span class="token operator">/</span>_<span class="token operator">/</span>_<span class="token operator">/</span>_<span class="token operator">/</span>
 <span class="token operator">:</span><span class="token operator">:</span> Spring Boot <span class="token operator">:</span><span class="token operator">:</span>                <span class="token operator">(</span><span class="token number">v2.6.8</span><span class="token operator">)</span>

<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token level info keyword">INFO</span> <span class="token number">11701</span> <span class="token separator comment">---</span> <span class="token punctuation">[</span>  restartedMain<span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>b<span class="token punctuation">.</span>w<span class="token punctuation">.</span>embedded<span class="token punctuation">.</span>tomcat<span class="token punctuation">.</span>TomcatWebServer  <span class="token operator">:</span> Tomcat started on port<span class="token operator">(</span>s<span class="token operator">)</span><span class="token operator">:</span> <span class="token number">8080</span> <span class="token operator">(</span>http<span class="token operator">)</span> with context path <span class="token string">&#39;&#39;</span>
<span class="token level info keyword">INFO</span> <span class="token number">11701</span> <span class="token separator comment">---</span> <span class="token punctuation">[</span>  restartedMain<span class="token punctuation">]</span> c<span class="token punctuation">.</span>j<span class="token punctuation">.</span>h<span class="token punctuation">.</span>HelloSpringBootApplication         <span class="token operator">:</span> Started HelloSpringBootApplication in <span class="token number">2.519</span> seconds <span class="token operator">(</span>JVM running for <span class="token number">3.216</span><span class="token operator">)</span>
<span class="token level info keyword">INFO</span> <span class="token number">11701</span> <span class="token separator comment">---</span> <span class="token punctuation">[</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>a<span class="token punctuation">.</span>c<span class="token punctuation">.</span>c<span class="token punctuation">.</span>C<span class="token punctuation">.</span><span class="token punctuation">[</span>Tomcat<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span>localhost<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token punctuation">[</span><span class="token operator">/</span><span class="token punctuation">]</span>       <span class="token operator">:</span> Initializing Spring DispatcherServlet <span class="token string">&#39;dispatcherServlet&#39;</span>
<span class="token level info keyword">INFO</span> <span class="token number">11701</span> <span class="token separator comment">---</span> <span class="token punctuation">[</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet        <span class="token operator">:</span> Initializing Servlet <span class="token string">&#39;dispatcherServlet&#39;</span>
<span class="token level info keyword">INFO</span> <span class="token number">11701</span> <span class="token separator comment">---</span> <span class="token punctuation">[</span>nio<span class="token operator">-</span><span class="token number">8080</span><span class="token operator">-</span>exec<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> o<span class="token punctuation">.</span>s<span class="token punctuation">.</span>web<span class="token punctuation">.</span>servlet<span class="token punctuation">.</span>DispatcherServlet        <span class="token operator">:</span> Completed initialization in <span class="token number">1</span> ms
</code></pre></div><h3 id="try-out-the-api" tabindex="-1"><a class="header-anchor" href="#try-out-the-api" aria-hidden="true">#</a> Try Out the API</h3>`,11),N={href:"http://localhost:8080/swagger-ui.html",target:"_blank",rel:"noopener noreferrer"},E=s("http://localhost:8080/swagger-ui.html"),D=n("p",null,[n("img",{src:r,alt:"Swagger-UI"})],-1),C=s("GET - "),L={href:"http://localhost:8080/api/hello",target:"_blank",rel:"noopener noreferrer"},F=s("http://localhost:8080/api/hello"),W=n("p",null,[n("img",{src:u,alt:"GET - /api/hello"})],-1),z=s("POST - "),V={href:"http://localhost:8080/api/greeting",target:"_blank",rel:"noopener noreferrer"},J=s("http://localhost:8080/api/greeting"),G=n("p",null,[n("img",{src:k,alt:"POST - /api/greeting"})],-1);function U(K,Q){const a=e("ExternalLinkIcon");return c(),l("div",null,[g,n("p",null,[h,n("a",m,[v,t(a)]),_]),f,n("p",null,[b,n("a",w,[y,t(a)]),I,S,q]),x,n("div",j,[P,n("p",null,[n("a",A,[B,t(a)])])]),n("div",T,[O,n("p",null,[n("a",H,[M,t(a)])])]),R,n("p",null,[n("a",N,[E,t(a)])]),D,n("p",null,[C,n("a",L,[F,t(a)])]),W,n("p",null,[z,n("a",V,[J,t(a)])]),G])}var Y=o(d,[["render",U],["__file","hello-spring-boot.html.vue"]]);export{Y as default};
